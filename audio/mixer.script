CAN_PLAY_SOUND_EFFECTS=true --only play one each second
LAST_CAN_PLAY_SOUND_EFFECTS=CAN_PLAY_SOUND_EFFECTS

sinceLastTimeSoundEffects=0

BATTLE_MODE=false
BACKGROUND_LOWERED=false
PLAYING_VICTORY_OR_DEFEAT=false

currentVoice=nil

HEALING_PLAYING=false

HIT_VARIATIONS=3

sinceLastError=0

ROAMING_UNIT_LENGTH=43.2
timeCurrentRoamingPlaying=0

timeSincePlayedHitLast=0

timeSincePlayedHealingLast=0
timeSincePlayedUnderAttack=0
timeSincePlayerNotEnoughResources=0

NUM_ROAMING_UNITS=4
ROAMING_IDS_TO_PLAY={}
ROAMING_IDS_USED={}

function init(self)

	
	
	if IN_GAME then
		
		startSoundscapeMusic()
		startMainBackgroundMusic()
		
		math.randomseed(os.time())  --seed
		math.random(1,NUM_ROAMING_UNITS) --the first random is always constant for some reason so we call it here
		
		for c=1,NUM_ROAMING_UNITS,1 do
		
			
			local nextId=math.random(1,NUM_ROAMING_UNITS)
			
			while ROAMING_IDS_USED[nextId] do	
				nextId=math.random(1,NUM_ROAMING_UNITS)
			end
			
			ROAMING_IDS_USED[nextId]=true
			ROAMING_IDS_TO_PLAY[c]=nextId	
			
		end
		
	end
end

function on_message(self, message_id, message, sender)

	--CALLS	
	if message_id == hash("workerCall") and CAN_PLAY_SOUND_EFFECTS then
		playSoundEffect("workerCall")
	elseif message_id == hash("tankCall") and CAN_PLAY_SOUND_EFFECTS then
		playSoundEffect("tankCall")
	elseif message_id == hash("soldierCall") and CAN_PLAY_SOUND_EFFECTS then
		playSoundEffect("soldierCall")
	elseif message_id == hash("healerCall") and CAN_PLAY_SOUND_EFFECTS then
		playSoundEffect("healerCall")
	elseif message_id == hash("deathVoice") and CAN_PLAY_SOUND_EFFECTS then
		playSoundEffect("deathVoice")
		
	--RESPONSES
	elseif message_id == hash("workerResponse") and CAN_PLAY_SOUND_EFFECTS then
		playSoundEffect("workerResponse")
	elseif message_id == hash("tankResponse") and CAN_PLAY_SOUND_EFFECTS then
		playSoundEffect("tankResponse")
	elseif message_id == hash("soldierResponse") and CAN_PLAY_SOUND_EFFECTS then
		playSoundEffect("soldierResponse")
	elseif message_id == hash("healerResponse") and CAN_PLAY_SOUND_EFFECTS then
		playSoundEffect("healerResponse")
		
	
	--MISSION 1 VOICE
	elseif message_id == hash("mission1Voice1")  and ENABLE_SOUND then
		msg.post("#mission1Voice1", "play_sound", {delay = 0, gain = 0.5})
		currentVoice="#mission1Voice1"
	elseif message_id == hash("mission1Voice2")  and ENABLE_SOUND  then
		msg.post("#mission1Voice2", "play_sound", {delay = 0, gain = 0.5})	
		currentVoice="#mission1Voice2"
	elseif message_id == hash("mission1Voice3")  and ENABLE_SOUND  then
		msg.post("#mission1Voice3", "play_sound", {delay = 0, gain = 0.5})	
		currentVoice="#mission1Voice3"
	elseif message_id == hash("mission1Voice4")  and ENABLE_SOUND  then
		msg.post("#mission1Voice4", "play_sound", {delay = 0, gain = 0.5})	
		currentVoice="#mission1Voice4"
	elseif message_id == hash("mission1Voice5")  and ENABLE_SOUND  then
		msg.post("#mission1Voice5", "play_sound", {delay = 0, gain = 0.5})	
		currentVoice="#mission1Voice5"
		
	--MISSION 2 VOICE
	elseif message_id == hash("mission2Voice1") and ENABLE_SOUND then
		msg.post("#mission2Voice1", "play_sound", {delay = 0, gain = 0.5})
		currentVoice="#mission2Voice1"
	elseif message_id == hash("mission2Voice2") and ENABLE_SOUND then
		msg.post("#mission2Voice2", "play_sound", {delay = 0, gain = 0.5})
		currentVoice="#mission2Voice2"
	elseif message_id == hash("mission2Voice3") and ENABLE_SOUND then
		msg.post("#mission2Voice3", "play_sound", {delay = 0, gain = 0.5})
		currentVoice="#mission2Voice3"
	elseif message_id == hash("mission2Voice4") and ENABLE_SOUND then
		msg.post("#mission2Voice4", "play_sound", {delay = 0, gain = 0.5})
		currentVoice="#mission2Voice4"
	elseif message_id == hash("mission2Voice5") and ENABLE_SOUND then
		msg.post("#mission2Voice5", "play_sound", {delay = 0, gain = 0.5})
		currentVoice="#mission2Voice5"
	elseif message_id == hash("engineer1") and ENABLE_SOUND then
		msg.post("#engineer1", "play_sound", {delay = 0, gain = 0.5})
		currentVoice="#engineer1"
		
	--MISSION 3 VOICE
	elseif message_id == hash("mission3Voice1") and ENABLE_SOUND then
		msg.post("#mission3Voice1", "play_sound", {delay = 0, gain = 0.5})
		currentVoice="#mission3Voice1"
		
	--MISC
	elseif message_id == hash("errorSound") then
		if sinceLastError>0.5 then
			print("errorSound")
			msg.post("#errorSound","play_sound")
			sinceLastError=0
		end
	elseif message_id == hash("upgradeComplete") then
		local gain=0.5
		if BACKGROUND_LOWERED then gain=0.2 end
		msg.post("#upgradeComplete","play_sound", {delay = 0, gain = gain})
	elseif message_id == hash("enteringExtractor") then
		local gain=0.5
		if BACKGROUND_LOWERED then gain=0.2 end
		msg.post("#enteringExtractor","play_sound", {delay = 0, gain = gain})
	elseif message_id == hash("battleMode") then
		startBattleBackgroundMusic()
	elseif message_id == hash("victory") then
		startVictoryMusic()
	elseif message_id == hash("defeat") then
		startDefeatMusic()
	elseif message_id == hash("stopVoice") then
		if currentVoice then
			msg.post(currentVoice, "stop_sound")
		end
	elseif message_id == hash("lowerBackground") then
		if not BATTLE_MODE then
			sound.set_group_gain("main",0.2)
		else
			sound.set_group_gain("battle",0.5)
		end
		
		sound.set_group_gain("sfx",0.2)
		
		BACKGROUND_LOWERED=true
		
	elseif message_id == hash("normalBackground")then
		if not BATTLE_MODE then
			sound.set_group_gain("main",0.5)
		else
			sound.set_group_gain("battle",1)
		end
		BACKGROUND_LOWERED=false
		
		sound.set_group_gain("sfx",1.0)
		
	elseif message_id == hash("healing") and HEALING_PLAYING==false then	
	
		if timeSincePlayedHealingLast>0.3 then
			msg.post("#healing","play_sound", {delay = 0, gain = 0.5})
			timeSincePlayedHealingLast=0
			HEALING_PLAYING=true
		end
		
	elseif message_id == hash("stopHealing") and HEALING_PLAYING==true then
		msg.post("#healing","stop_sound")	
		HEALING_PLAYING=false
	elseif message_id == hash("hit") then
	
		if timeSincePlayedHitLast>0.05 then
		
			timeSincePlayedHitLast=0
			local path="#hit"..math.random(1, HIT_VARIATIONS)
			msg.post(path,"play_sound", {delay = 0, gain =0.2})
		end
		
	elseif message_id == hash("death") then
		msg.post("#death","play_sound", {delay = 0, gain =0.5})
		
	--timeSincePlayedUnderAttack=timeSincePlayedUnderAttack+dt
	--timeSincePlayerNotEnoughResources=timeSincePlayerNotEnoughResources+dt
	
	elseif message_id == hash("underAttack") then
		if timeSincePlayedUnderAttack>20 then
			msg.post("#underAttack","play_sound", {delay = 0, gain =0.5})
			timeSincePlayedUnderAttack=0
		end
		
	elseif message_id==hash("notEnoughResources") then
		if timeSincePlayerNotEnoughResources>3 then
			timeSincePlayerNotEnoughResources=0
			msg.post("#notEnoughResources","play_sound", {delay = 0, gain =0.5})
		end
		
	elseif message_id == hash("constructionDone") then
		local gain=0.2
		if BACKGROUND_LOWERED then gain=0.1 end
		msg.post("#constructionComplete","play_sound", {delay = 0, gain=gain})
		
	elseif message_id==hash("menuSong") then 
		msg.post("#menuSong","play_sound", {delay = 0, gain =0.5})
	elseif message_id==hash("stopMenuSong")then
		msg.post("#menuSong","stop_sound", {delay = 0, gain =0.5})
	elseif message_id==hash("click1") then 
		msg.post("#click1","play_sound", {delay = 0, gain = 0.4})
	elseif message_id==hash("click2") then 
		msg.post("#click2","play_sound", {delay = 0, gain = 0.4})
	elseif message_id==hash("gameClick") then 
		msg.post("#gameClick","play_sound", {delay = 0, gain =1.5})
	elseif message_id==hash("between1and2") then 
		msg.post("#between1and2","play_sound", {delay = 0, gain =0.5})
	elseif message_id==hash("lowerBetween1and2") then 
		msg.post("#between1and2","play_sound", {delay = 0, gain =0.2})
	elseif message_id==hash("normalBetween1and2") then 
		msg.post("#between1and2","play_sound", {delay = 0, gain =0.5})
	elseif message_id==hash("stopBetween1and2") then 
		msg.post("#between1and2","stop_sound")
	end
	
end

roamingCount=1
currentlyEnteringRoaming=nil
currentlyEnteringRoamingGain=0

function update(self, dt)

	if currentlyEnteringRoaming then
		currentlyEnteringRoamingGain=currentlyEnteringRoamingGain+0.01
		msg.post(currentlyEnteringRoaming, "set_gain", {gain = currentlyEnteringRoamingGain})
		
		if currentlyEnteringRoamingGain>=0.5 then
			currentlyEnteringRoaming=nil
			currentlyEnteringRoamingGain=0
		end
	end

	if IN_GAME then
	
		checkIfCanPlaySFX(dt)
		
		sinceLastError=sinceLastError+dt
		
		timeCurrentRoamingPlaying=timeCurrentRoamingPlaying+dt
		timeSincePlayedHitLast=timeSincePlayedHitLast+dt
		timeSincePlayedHealingLast=timeSincePlayedHealingLast+dt
		timeSincePlayedUnderAttack=timeSincePlayedUnderAttack+dt
		timeSincePlayerNotEnoughResources=timeSincePlayerNotEnoughResources+dt
		
		if timeCurrentRoamingPlaying>=ROAMING_UNIT_LENGTH and roamingCount<=NUM_ROAMING_UNITS then
			
			if ROAMING_IDS_TO_PLAY[roamingCount] then
				currentlyEnteringRoaming="#roamingUnit"..ROAMING_IDS_TO_PLAY[roamingCount]
			end
			
			
			timeCurrentRoamingPlaying=0
			roamingCount=roamingCount+1
			
		end
		
	end
	
end

function reload(self)
	
end

function final(self)
    msg.post("battle","stop_sound")
    msg.post("click1","stop_sound")
    msg.post("click2","stop_sound")
    msg.post("constructionComplete","stop_sound")
    msg.post("death","stop_sound")
    msg.post("deathVoice1","stop_sound")
    msg.post("deathVoice2","stop_sound")
    msg.post("defeat","stop_sound")
    msg.post("engineer1","stop_sound")
    msg.post("enteringExtractor","stop_sound")
    msg.post("errorSound","stop_sound")
    msg.post("healerCall1","stop_sound")
    msg.post("healerCall2","stop_sound")
    msg.post("healerCall3","stop_sound")
    msg.post("healerCall4","stop_sound")
    msg.post("healerResponse1","stop_sound")
    msg.post("healerResponse2","stop_sound")
    msg.post("healerResponse3","stop_sound")
    msg.post("healerResponse4","stop_sound")
    msg.post("healing","stop_sound")
    msg.post("hit1","stop_sound")
    msg.post("hit2","stop_sound")
    msg.post("hit3","stop_sound")
    msg.post("main","stop_sound")
    msg.post("menuSong","stop_sound")
    msg.post("mission1Voice1","stop_sound")
    msg.post("mission1Voice2","stop_sound")
    msg.post("mission1Voice3","stop_sound")
    msg.post("mission1Voice4","stop_sound")
    msg.post("mission1Voice5","stop_sound")
    msg.post("mission2Voice1","stop_sound")
    msg.post("mission2Voice2","stop_sound")
    msg.post("mission2Voice3","stop_sound")
    msg.post("mission2Voice4","stop_sound")
    msg.post("mission2Voice5","stop_sound")
    msg.post("notEnoughResources","stop_sound")
    msg.post("roamingUnit1","stop_sound")
    msg.post("roamingUnit2","stop_sound")
    msg.post("roamingUnit3","stop_sound")
    msg.post("roamingUnit4","stop_sound")
    msg.post("soldierCall1","stop_sound")
    msg.post("soldierCall2","stop_sound")
    msg.post("soldierCall3","stop_sound")
    msg.post("soldierCall4","stop_sound")
    
    msg.post("soldierResponse1","stop_sound")
    msg.post("soldierResponse2","stop_sound")
    msg.post("soldierResponse3","stop_sound")
    msg.post("soldierResponse4","stop_sound")
    
    msg.post("soundscape","stop_sound")
    
    msg.post("tankCall1","stop_sound")
    msg.post("tankCall2","stop_sound")
    msg.post("tankCall3","stop_sound")
    msg.post("tankCall4","stop_sound")
    
    msg.post("tankResponse1","stop_sound")
    msg.post("tankResponse2","stop_sound")
    msg.post("tankResponse3","stop_sound")
    msg.post("tankResponse4","stop_sound")

	msg.post("underAttack","stop_sound")
	msg.post("upgradeComplete","stop_sound")
	
	msg.post("victory","stop_sound")
	msg.post("workerCall1","stop_sound")
	msg.post("workerCall2","stop_sound")
	msg.post("workerCall3","stop_sound")
	msg.post("workerCall4","stop_sound")
	
	msg.post("workerResponse1","stop_sound")
	msg.post("workerResponse2","stop_sound")
	msg.post("workerResponse3","stop_sound")
	msg.post("workerResponse4","stop_sound")
end


-- -5 angle
-- 55.7 saturation
