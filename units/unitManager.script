
function init(self)
	
	
	
end

function setTeam(unitID,teamNumber)
	msg.post(msg.url(unitID),"setTeam",{newTeamNumber=teamNumber})
end

COMMAND_FACTORY_MAP={}
COMMAND_FACTORY_MAP[hash("new"..RBC_NAME)]="#rbcFactory"
COMMAND_FACTORY_MAP[hash("new"..HEAL1_NAME)]="#heal1Factory"
COMMAND_FACTORY_MAP[hash("new"..HEAL2_NAME)]="#heal2Factory"
COMMAND_FACTORY_MAP[hash("new"..TANK1_NAME)]="#tank1Factory"
COMMAND_FACTORY_MAP[hash("new"..WORKER_NAME)]="#workerFactory"

function on_message(self, message_id, message, sender)
	
	local factoryID=COMMAND_FACTORY_MAP[message_id]
	
	print("factoryID "..factoryID)
	
	if factoryID then
	
		local initialPosition=vmath.vector3(message.producerPosition.x,
												    message.producerPosition.y-TILE_SIZE,1)
		local newUnit=factory.create(factoryID,initialPosition)
		
		local rollOutPosition=vmath.vector3(message.position.x,
												    message.position.y-TILE_SIZE,1)
		
				
		msg.post(msg.url(newUnit), "rollOutOfProducer", {x=rollOutPosition.x,
												 y=rollOutPosition.y,waypointSet=message.waypointSet,prodX=message.producerPosition.x,prodY=message.producerPosition.y-TILE_SIZE})
								    
	end	

	
end

function adjustAllNeededHealthbars()

	for unit,stillHere in pairs(SELECTED_UNITS) do 
    	if stillHere and unit and ALIVE[unit.id] then
    		msg.post(unit.id,"moveHealthbar")
    	end
    end
    
end

