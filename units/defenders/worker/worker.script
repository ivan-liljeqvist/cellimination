


function init(self)
	tilemapObject=tilemap
	self.go=go
	
	
	self.x=go.get_position().x
	self.y=go.get_position().y
	
	self.boundsWidthScale=0.5
	self.boundsHeightScale=0.5
	self.initialScale=0.3
	
	self.parseInput=function(self, action_id, action)

	end
	
    initBasicUnit(self,WORKER_NAME,go.get_id())
    initMovableUnit(self)
    initBasicWorker(self)
 
 	self.fogRadius=FOG_RADIUS[self.name]

	self.requiresGUI=true
	
	
	
	local deselectAction=function() msg.post("manager","deselectAll",{}) end

	local buildBaseAction=function() 
		if canAfford(BASE_NAME) then
			msg.post("buildingManager", "newBase", {workerID = self.id}) 
		else
			msg.post("HUD","displayErrorMessage",{text=NOT_ENOUGH_RESOURCES})
		end
	end
	
	local buildCarbExtractor=function() 
		if canAfford(CARB_EXTRACTOR_NAME) then
			msg.post("buildingManager", "newCarbExtractor", {workerID = self.id}) 
		else
			msg.post("HUD","displayErrorMessage",{text=NOT_ENOUGH_RESOURCES})
		end
	end
	
	local buildFatExtractor=function() 
		if canAfford(FAT_EXTRACTOR_NAME) then
			msg.post("buildingManager", "newFatExtractor", {workerID = self.id}) 
		else
			msg.post("HUD","displayErrorMessage",{text=NOT_ENOUGH_RESOURCES})
		end
	end
	
	local buildProteinExtractor=function() 
		if canAfford(PROTEIN_EXTRACTOR_NAME) then
			msg.post("buildingManager", "newProteinExtractor", {workerID = self.id})
		else
			msg.post("HUD","displayErrorMessage",{text=NOT_ENOUGH_RESOURCES})
		end 
	end
	
	local buildBarracks=function() 
		if canAfford(BARACKS_NAME) then
			msg.post("buildingManager", "newBarracks", {workerID = self.id}) 
		else
			msg.post("HUD","displayErrorMessage",{text=NOT_ENOUGH_RESOURCES})
		end
	end
	
	local buildStorage=function() 
		if canAfford(STORAGE_NAME) then
			msg.post("buildingManager", "newStorage", {workerID = self.id}) 
		else
			msg.post("HUD","displayErrorMessage",{text=NOT_ENOUGH_RESOURCES})
		end
	end
	
	local buildEvolution=function() 
		if canAfford(EVOLUTION_NAME) then
			msg.post("buildingManager", "newEvolution", {workerID = self.id}) 
		else
			msg.post("HUD","displayErrorMessage",{text=NOT_ENOUGH_RESOURCES})
		end
	end
	
	local buildHouse=function() 
		if canAfford(HOUSE_NAME) then
			msg.post("buildingManager", "newHouse", {workerID = self.id}) 
		else
			msg.post("HUD","displayErrorMessage",{text=NOT_ENOUGH_RESOURCES})
		end
	end
	
	
	self.GUILayout={button1={icon="deselectIcon",action=deselectAction, hover=function() return HOVER_LAYOUT[CANCEL_PRODUCTION] end},
					button2={icon="level",action=buildEvolution,hover= function() return HOVER_LAYOUT[EVOLUTION_NAME] end},
					button3={icon="sword",action=buildBarracks,hover= function() return HOVER_LAYOUT[BARACKS_NAME] end},
					button4={icon="proteinExtractorIcon",action=buildProteinExtractor,hover= function() return HOVER_LAYOUT[PROTEIN_EXTRACTOR_NAME] end},
					button5={icon="fatExtractorIcon",action=buildFatExtractor, hover=function() return HOVER_LAYOUT[FAT_EXTRACTOR_NAME] end},
					button6={icon="carbExtractorIcon",action=buildCarbExtractor, hover=function() return HOVER_LAYOUT[CARB_EXTRACTOR_NAME] end},
					button7={icon="mainBaseIcon",action=buildBaseAction,hover=function() return HOVER_LAYOUT[BASE_NAME] end},
					button8={icon="bed",action=buildHouse,hover= function() return HOVER_LAYOUT[HOUSE_NAME] end},
					button9={icon="piggy",action=buildStorage,hover= function() return HOVER_LAYOUT[STORAGE_NAME] end}}

				
	self.originalHealth=100
	self.health=100
end


function update(self, dt)

	
	basicUnitUpdate(self,dt,go)
	unitUpdate(self,go,dt)
	workerUpdate(self,go,dt)
    
end







function on_message(self, message_id, message, sender)

	handleSelectMethods(self,go,message_id,message,sender)
	basicUnitMessageHandler(self,go,message_id,message,sender)
	workerMessageHandler(self,go,message_id,message,sender,go)
	
	if self.canFight then
		fightingUnitMessageHandler(self,go,message_id,message,sender)
	end
	
	if message_id == hash("deleteGO")then
		go.delete(go.get_id())
	end

end

function on_reload(self)
    -- Add reload-handling code here
    -- Remove this function if not needed
end

function final(self)
    -- Add finalization code here
    -- Remove this function if not needed
end


