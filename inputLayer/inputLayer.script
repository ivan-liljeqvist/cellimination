function init(self)
    
	msg.post(".", "acquire_input_focus")
	
end


function on_input(self, action_id, action)

	LAST_ACTIONX=action.x
	LAST_ACTIONY=action.y

	if action_id == hash("scrolledUp") then
		ZOOM_LEVEL=ZOOM_LEVEL+0.03
		adjustAllNeededHealthbars()
	elseif action_id == hash("scrolledDown") then
		ZOOM_LEVEL=ZOOM_LEVEL-0.03
		adjustAllNeededHealthbars()
	end
	
	if ZOOM_LEVEL<1.2 then ZOOM_LEVEL=1.2 end
	if ZOOM_LEVEL>2.4 then ZOOM_LEVEL=2.4 end
	
	moveMinimap(action,action_id)
	
	msg.post("ownCamera","newInput",{action_id=action_id,action=action})


	for key,value in pairs(GAME_OBJECTS_THAT_REQUIRE_INPUT) do 
	
		if value==true then
			
			msg.post(key, "newInput", {action_id=action_id,action=action})
		end
	
	end

end



local holdingDownOnMinimap=false

MINIMAP_BOUNDS={}
MINIMAP_BOUNDS[0]={x=230,y=230}
MINIMAP_BOUNDS[1]={x=230,y=230}
MINIMAP_BOUNDS[2]={x=230,y=230}
MINIMAP_BOUNDS[3]={x=230,y=230}
MINIMAP_BOUNDS[4]={x=230,y=230}
MINIMAP_BOUNDS[5]={x=230,y=230}

function moveMinimap(action,action_id)
	
	
	
	if action.x<MINIMAP_BOUNDS[LEVEL].x and action.y<MINIMAP_BOUNDS[LEVEL].y   then
		
		GUI_CLICKED=true
		
		if action_id==hash("leftClicked") and action.pressed and holdingDownOnMinimap==false then
			
			sendMessageToMinimap(action)
			holdingDownOnMinimap=true
		
		elseif action_id==hash("leftClicked") and action.released then
			
			holdingDownOnMinimap=false
			
		else
			if holdingDownOnMinimap then
				sendMessageToMinimap(action)
			end
			JUST_CLICKED_MINIMAP=true
		end
	else	
		JUST_CLICKED_MINIMAP=false
		holdingDownOnMinimap=false
	end
end

function sendMessageToMinimap(action)
	local percentOfMinimapX = action.x/HUD_RIGHT_HEIGHT
	local percentOfMinimapY = action.y/HUD_RIGHT_HEIGHT
	
	local lookAtX = math.floor(percentOfMinimapX*TILEMAP_MAXX*TILE_SIZE)
	local lookAtY = math.floor(percentOfMinimapY*TILEMAP_MAXY*TILE_SIZE)
	
	msg.post("ownCamera","look",{x=lookAtX,y=lookAtY})
end











