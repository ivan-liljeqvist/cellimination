
require "modules.data.unitData"
require "modules.data.fighters"
require "modules.data.tanks"
require "modules.data.healers"
require "modules.data.extractors"
require "modules.data.buildings"

require "modules.productionMethods"
require "modules.workerBase"
require "modules.globals"
require "modules.state"
require "modules.soundHelper"
require "modules.pathfinder"
require "modules.coordinates"
require "modules.unit"
require "modules.movableUnit"
require "modules.pathGenerator"
require "modules.pathFollower"
require "modules.bounds"
require "modules.selectMethods"
require "modules.buildingBase"
require "modules.productionUnit"
require "modules.colors"
require "modules.fogManager"
require "modules.fightingUnit"
require "modules.healingUnit"

function init(self)
    
    --give the global tilemap object to this function (globals.lua) and create
    --a table of nodes that will be used for pathfinding
	populateNodeArray(tilemap)
	

	
end

function final(self)

end

function update(self, dt)
	updateFoW(tilemap)
	
	PROTEIN=PROTEIN+PROTEIN_EXTRACTORS_MADE*dt*8
	CARBS=CARBS+CARB_EXTRACTORS_MADE*dt*8
	FAT=FAT+FAT_EXTRACTORS_MADE*dt*8
end

function on_message(self, message_id, message, sender)
    
    --a new unit is single-selected, send message to all units and units that are not the selected one will deselect
	if message_id==hash("unitSelected") then
		for _,unit in  pairs(selectableUnits) do 
		    msg.post(unit,"unitSelected",message)
		end
		
	--send massSelection message to all units, each units will decide if it's in the selection
	elseif message_id==hash("massSelection") then
		for _,unit in  pairs(selectableUnits) do 
			if unit and ALIVE[unit] then
		    	pcall(msg.post,unit,"massSelection",message)
		    end
		end
	
	--double click, select all of a kind on screen	
	elseif message_id==hash("allOnScreenSelectSpecific") then
		
		print("allOnScreenSelectSpecific in manager "..message.name)
	
		for _,unit in  pairs(selectableUnits) do 
			if unit and ALIVE[unit] then
		    	pcall(msg.post,unit,"allOnScreenSelectSpecific",message)
		    end
		end
		
	--send message to all units to deselect all
	elseif message_id==hash("deselectAll")then
		
		for _,unit in  pairs(selectableUnits) do 
			if unit and ALIVE[unit] then
		   		msg.post(unit,"deselect",message)
		   	end
		end
	end
end

function on_input(self, action_id, action)

end

function on_reload(self)
	
end
