

function init(self)

	tilemapObject=tilemap
	self.go=go
	
	self.x=go.get_position().x
	self.y=go.get_position().y
	
	self.boundsWidthScale=0.9
	self.boundsHeightScale=0.9
	
	self.initialScale=0.9
	self.constructionScale=0.5
	self.fogRadius=BASE_FOG_RADIUS
	
	self.willBecomeBuilding=true
	self.factory=factory
	self.sprite=sprite
	
	self.needsWaypoint=true
	
	self.isBuilding=true
	
    initBasicUnit(self,BASE_NAME,go.get_id())
	initBuilding(self,sprite,{startPointFromCenter={x=-1,y=-1},width=3,height=2},go)
	initProductionUnit(self)
	
	self.parseInput=function(self, action_id, action)
		
		buildingInput(self,action,action_id)
	end
	
	local buildWorkerAction=function() 
		queue(self,WORKER_NAME)
	end
	

	self.productionComplete=function(itemName,self)
		productionDone(self,itemName)
	end
	
	self.requiresGUI=true
	
	local deselectAction=function() msg.post("manager","deselectAll",{}) end
	
	self.GUILayout={button1={icon="deselectIcon", action=deselectAction, hover=function() return HOVER_LAYOUT[DESELECT]  end},
					button2=nil,
					button3=nil,
					button4=nil,
					button5=nil,
					button6=nil,
					button7=nil,
					button8=nil,
					button9=nil,
					productionButton1={icon="deselectIcon",action=productionButton1Pressed, hover=function() return HOVER_LAYOUT[CANCEL_PRODUCTION] end},
					productionButton2={icon="deselectIcon",action=productionButton2Pressed, hover=function() return HOVER_LAYOUT[CANCEL_PRODUCTION] end},
					productionButton3={icon="deselectIcon",action=productionButton3Pressed, hover=function() return HOVER_LAYOUT[CANCEL_PRODUCTION] end},
					productionButton4={icon="deselectIcon",action=productionButton4Pressed, hover=function() return HOVER_LAYOUT[CANCEL_PRODUCTION] end}}

	
	self.GUILayoutComplete={button1={icon="deselectIcon", action=deselectAction, hover=function() return HOVER_LAYOUT[DESELECT]  end},
					button2=nil,
					button3=nil,
					button4=nil,
					button5={icon="RBCIcon", action=buildWorkerAction, hover=function() return HOVER_LAYOUT[WORKER_NAME] end},
					button6=nil,
					button7=nil,
					button8=nil,
					button9=nil,
					productionButton1={icon="deselectIcon",action=productionButton1Pressed, hover=function() return HOVER_LAYOUT[CANCEL_PRODUCTION] end},
					productionButton2={icon="deselectIcon",action=productionButton2Pressed, hover=function() return HOVER_LAYOUT[CANCEL_PRODUCTION] end},
					productionButton3={icon="deselectIcon",action=productionButton3Pressed, hover=function() return HOVER_LAYOUT[CANCEL_PRODUCTION] end},
					productionButton4={icon="deselectIcon",action=productionButton4Pressed, hover=function() return HOVER_LAYOUT[CANCEL_PRODUCTION] end}}
	
	if (LEVEL==2 or LEVEL==3) and BASES_SPAWNED_LEVEL2<1  then
		spawnNow(self,go.get_position().x,go.get_position().y)
		BASES_SPAWNED_LEVEL2=BASES_SPAWNED_LEVEL2+1
	elseif not IN_GAME then
		print("NOT IN GAME SPAWN")
		spawnNow(self,go.get_position().x,go.get_position().y)
	end
	
	
end




function update(self, dt)

	basicUnitUpdate(self,dt,go)
    buildingUpdate(self,dt,go)
    updateProductionUnit(self,dt)
    
end

function on_message(self, message_id, message, sender)

	handleSelectMethods(self,go,message_id,message)
	basicUnitMessageHandler(self,go,message_id,message,sender)
	buildingMessageHandler(self,go,message_id,message,sender)
	
	if message_id == hash("deleteGO")then
		go.delete(go.get_id())
	end
	
end





